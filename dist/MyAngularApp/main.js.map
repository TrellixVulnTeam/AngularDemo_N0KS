{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/carasoul-example/carasoul-example.component.html","./src/app/carasoul-example/carasoul-example.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  constructor(private fb: FormBuilder, private router: Router) {\n    this.registerForm = this.fb.group({\n      'firstName': ['', Validators.required],\n      'lastName': ['', Validators.required],\n      'mobileNumber': ['', Validators.required],\n      'password': ['', Validators.required],\n      'dateOfBirth': ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  Register() {\n    this.router.navigateByUrl('/login');\n\n  }\n}\n","<p>register works!</p>\n\n<form [formGroup]=\"registerForm\" class=\"example-form\">\n    <div>\n        <mat-form-field class=\"example-full-width\" appearance=\"standard\">\n            <mat-label>First Name</mat-label>\n            <input matInput formControlName=\"firstName\">\n            <mat-error *ngIf=\"registerForm.controls.firstName.hasError('required')\">required</mat-error>\n        </mat-form-field>\n    </div>\n    <div>\n        <mat-form-field class=\"example-full-width\" appearance=\"standard\">\n            <mat-label>Last Name</mat-label>\n            <input matInput formControlName=\"lastName\">\n            <mat-error *ngIf=\"registerForm.controls.lastName.hasError('required')\">required</mat-error>\n        </mat-form-field>\n    </div>\n    <div>\n        <mat-form-field appearance=\"standard\">\n            <mat-label>DOB</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"dateOfBirth\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n    </div>\n    <div>\n        <mat-form-field class=\"example-full-width\" appearance=\"standard\">\n            <mat-label>Mobile Number</mat-label>\n            <input matInput formControlName=\"mobileNumber\">\n            <mat-error *ngIf=\"registerForm.controls.mobileNumber.hasError('required')\">required</mat-error>\n        </mat-form-field>\n    </div>\n    <div>\n        <mat-form-field class=\"example-full-width\" appearance=\"standard\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\">\n        </mat-form-field>\n    </div>\n    <button mat-raised-button color=\"primary\" [disabled]=\"registerForm.invalid\" (click)=\"Register()\">Register</button>\n    <button mat-raised-button color=\"primary\" routerLink=\"/login\">Back</button>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'MyAngularApp';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { CarasoulExampleComponent } from './carasoul-example/carasoul-example.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    CarasoulExampleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  providers: [MatDatepickerModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"card\">\n    <h5 class=\"card-header\">{{ episodeDetail.productionYear }}</h5>\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">{{ episodeDetail.title }}</h5>\n        <p class=\"card-text\"> {{ episodeDetail.synopsis }}</p>\n    </div>\n\n    <div id=\"carouselExampleControls\" data-interval=\"false\" class=\"carousel slide\" data-ride=\"carousel\">\n        <div class=\"carousel-inner\">\n            <div class=\"carousel-item\" *ngFor=\"let photo of episodeDetail.imageUrls let i = index\"\n                [ngClass]=\"{'active': i == 0 }\">\n                <img [src]=\"photo\" class=\"d-block w-50\">\n            </div>\n            <a class=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">Previous</span>\n            </a>\n            <a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">Next</span>\n            </a>\n        </div>\n    </div>\n    <h5 class=\"card-footer\"></h5>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-carasoul-example',\n  templateUrl: './carasoul-example.component.html',\n  styleUrls: ['./carasoul-example.component.scss']\n})\nexport class CarasoulExampleComponent implements OnInit {\n  episodeDetail: any;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.episodeDetail = {\n      id: 1,\n      title: \"An Exercise in Fatality\",\n      productionYear: \"1974\",\n      synopsis: \"A health club owner murders one of his franchisees. Lt. Columbo is on the case.\",\n      imageUrls: [\"assets/photos/1.jpg\", \"assets/photos/2.jpg\", \"assets/photos/3.jpg\"]\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CarasoulExampleComponent } from './carasoul-example/carasoul-example.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'details', component: CarasoulExampleComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loginModel: any;\n  constructor(public fb: FormBuilder, private router: Router) {\n    this.loginForm = this.fb.group({\n      'username': ['', Validators.required],\n      'password': ['', Validators.compose([Validators.required, Validators.minLength(8)])]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  login() {\n    debugger;\n    this.loginModel = this.loginForm.value;\n    this.router.navigateByUrl('/home');\n  }\n}\n","<p>login works!</p>\n<form class=\"example-form\" [formGroup]=\"loginForm\">\n    <div class=\"row col-12\">\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>UserName <span style=\"color: red;\">*</span></mat-label>\n            <input matInput formControlName=\"username\">\n            <mat-error *ngIf=\"loginForm.controls.username.hasError('required')\">required</mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Password<span style=\"color: red;\">*</span></mat-label>\n            <input matInput type=\"password\" formControlName=\"password\">\n            <mat-error *ngIf=\"loginForm.controls.password.hasError('required')\">required</mat-error>\n        </mat-form-field>\n    </div>\n    <button mat-raised-button color=\"primary\" (click)=\"login()\" [disabled]=\"loginForm.invalid\">Save </button>\n    <button mat-raised-button routerLink=\"/register\">Register</button>\n</form>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}